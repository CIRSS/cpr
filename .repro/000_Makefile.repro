
# identify the REPRO and associated Docker image
REPRO_NAME=cpr
REPRO_DOCKER_ORG=cirss
REPRO_IMAGE_TAG=latest
REPRO_IMAGE=${REPRO_DOCKER_ORG}/${REPRO_NAME}:${REPRO_IMAGE_TAG}

# provide runtime options for Docker when running this REPRO
REPRO_DOCKER_OPTIONS=-p 9999:9999 --cap-add=SYS_PTRACE
REPRO_MOUNT_GO-CLI=--volume $(CURDIR)/../go-cli:/mnt/go-cli
REPRO_MOUNT_GEIST=--volume $(CURDIR)/../geist:/mnt/geist
REPRO_MOUNT_BLAZE=--volume $(CURDIR)/../blaze:/mnt/blaze
REPRO_MOUNT_OTHER_VOLUMES=$(REPRO_MOUNT_GO-CLI) $(REPRO_MOUNT_GEIST) $(REPRO_MOUNT_BLAZE)

# define mount point for REPRO directory tree in running container
REPRO_DIR=/mnt/${REPRO_NAME}

# identify important REPRO subdirectories
REPRO_EXAMPLES_DIR=examples

# define command for running the REPRO Docker image
REPRO_RUN_COMMAND=docker run -it --rm $(REPRO_DOCKER_OPTIONS)   \
                     --volume $(CURDIR):$(REPRO_DIR)            \
                     $(REPRO_MOUNT_OTHER_VOLUMES)               \
                     $(REPRO_IMAGE)

# detect if in a running REPRO container
ifdef IN_RUNNING_REPRO
RUN_IN_REPRO=bash -ic
else
RUN_IN_REPRO=$(REPRO_RUN_COMMAND) bash -icl
endif

ifeq ('$(OS)', 'Windows_NT')
PWSH=powershell -noprofile -command
endif
